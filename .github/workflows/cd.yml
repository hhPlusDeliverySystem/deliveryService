name: CD

on:
  push:
    branches:
      - develop

env:
  AWS_REGION: ap-northeast-2
  ECR_URL: 944312626793.dkr.ecr.ap-northeast-2.amazonaws.com/delivery-server
  ECR_REPOSITORY: delivery-server
  IMAGE_TAG: ${{ github.sha }}

jobs:
  deploy:
    name: Deploy Test
    runs-on: ubuntu-latest
    
    steps:
      - name: Checkout Repo
        uses: actions/checkout@v3

      - name: Configure AWS Credentials
        uses: aws-actions/configure-aws-credentials@v2
        with: 
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_ACCESS_KEY_SECRET }}
          aws-region: ${{ env.AWS_REGION }}

      - name: Login to Amazon ECR
        id: login-ecr-public
        uses: aws-actions/amazon-ecr-login@v1

      - name: Build Image To AWS ECR
        id: build-image
        run: |
          docker build -f Dockerfile_CD -t $ECR_URL:$IMAGE_TAG .
          echo "build success"

      - name: Push Image To AWS ECR
        id: push-image
        run: |
          docker push $ECR_URL:$IMAGE_TAG
          echo "::set-output name=image::$ECR_URL:$IMAGE_TAG"
      
      - name: Download task definition
        run: |
          aws ecs describe-task-definition --task-definition yunju2 --query taskDefinition > task-definition.json

      - name: Fill in the new image ID in the Amazon ECS task definition
        id: task-def
        uses: aws-actions/amazon-ecs-render-task-definition@v1
        with:
          task-definition: task-definition.json
          container-name: delivery-system
          image: ${{ steps.push-image.outputs.image }}

      - name: Deploy Amazon ECS task definition
        uses: aws-actions/amazon-ecs-deploy-task-definition@v1
        with: 
          task-definition: ${{ steps.task-def.outputs.task-definition }}
          service: delivery-server17
          cluster: delivery-system
          wait-for-service-stability: false








